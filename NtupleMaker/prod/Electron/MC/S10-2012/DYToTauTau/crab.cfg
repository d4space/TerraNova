[CRAB]

jobtype = cmssw
scheduler = remoteGlidein
### NOTE: just setting the name of the server (pi, lnl etc etc )
###       crab will submit the jobs to the server...
#server_name = bari
###       or let crab chose one server automatically for you 
use_server = 0

[CMSSW]

### The data you want to access (to be found on DBS)
#datasetpath=/ttbar_inclusive_TopRex/CMSSW_1_3_1-Spring07-1122/GEN-SIM-DIGI-RECO
#dbs_url=http://cmsdbsprod.cern.ch/cms_dbs_ph_analysis_02/servlet/DBSServlet
#datasetpath=/LM0/Spring10-START3X_V26_S09-v1/GEN-SIM-RECO

datasetpath=/DYToTauTau_M-20_CT10_TuneZ2star_v2_8TeV-powheg-tauola-pythia6/Summer12_DR53X-PU_S10_START53_V7A-v2/AODSIM

#/WminusToENu_CT10_TuneZ2star_8TeV-powheg-pythia6/Summer12-PU_S8_START52_V9-v2/AODSIM
#/WplusToENu_CT10_TuneZ2star_8TeV-powheg-pythia6/Summer12-PU_S8_START52_V9-v2/AODSIM 
#/DYToEE_M-20_CT10_TuneZ2star_8TeV-powheg-pythia6/Summer12-PU_S8_START52_V9-v2/AODSIM


### The ParameterSet you want to use

#pset=wEleNeuFilter_MC_2012_HighPU_cfg.py
pset=pf2pat_electron_cfg.py
#pset=mc_DY1020_powheg_cfg.py
#pset=CMSSW_428_MC_DYTauTau_cfg.py
#pset=CMSSW_428_MC_DYMuMu_cfg.py

#lumi_mask=/afs/cern.ch/cms/CAF/CMSCOMM/COMM_DQM/certification/Collisions11/7TeV/Prompt/Cert_160404-179431_7TeV_PromptReco_Collisions11_JSON.txt
#lumi_mask=/afs/cern.ch/cms/CAF/CMSCOMM/COMM_DQM/certification/Collisions11/7TeV/Reprocessing/Cert_170249-172619_7TeV_ReReco5Aug_Collisions11_JSON_v3.txt
#lumi_mask=/afs/cern.ch/cms/CAF/CMSCOMM/COMM_DQM/certification/Collisions11/7TeV/Reprocessing/Cert_160404-163869_7TeV_May10ReReco_Collisions11_JSON_v3.txt
#runselection=173671-174720
#total_number_of_events = 500
#events_per_job = 500
#total_number_of_lumis =-1
#lumis_per_job = 30

#MC only
### Splitting parameters
total_number_of_events=-1	
#total_number_of_events=100
events_per_job = 10000
#number_of_jobs = 1
#number_of_jobs = 700

### The output files (comma separated list)
output_file = patTuple_skim.root


[USER]
email=imkjm85@naver.com
#return_data = 0
### OUTPUT files INTO A SE
copy_data = 1
#storage_element = T2_IT_Bari
storage_element=cluster142.knu.ac.kr
storage_path=/srm/managerv2?SFN=/pnfs/knu.ac.kr/data/cms
user_remote_dir=/store/user/

### OUTPUT files Management
##  output back into UI
return_data = 0

### To use a specific name of UI directory where CRAB will create job to submit (with full path).
### the default directory will be "crab_0_data_time"
#ui_working_dir = /scratch/hh/lustre/cms/user/troendle/DATA_production/crab_MuRun2010A

### To specify the UI directory where to store the CMS executable output
### FULL path is mandatory. Default is  <ui_working_dir>/res will be used.
#outputdir= /full/path/yourOutDir

### To specify the UI directory where to store the stderr, stdout and .BrokerInfo of submitted jobs
### FULL path is mandatory. Default is <ui_working_dir>/res will be used.
#logdir= /full/path/yourLogDir


### if you want to copy data in a "official CMS site"
### you have to specify the name as written in
#storage_element = T2_DE_DESY
### the user_remote_dir will be created under the SE mountpoint
### in the case of publication this directory is not considered
#user_remote_dir = MuRun2010A_Nov4ZZ

### if you want to copy your data at CAF
#storage_element = T2_CH_CAF
### the user_remote_dir will be created under the SE mountpoint
### in the case of publication this directory is not considered
#user_remote_dir = name_directory_you_want

### if you want to copy your data to your area in castor at cern
### or in a "not official CMS site" you have to specify the complete name of SE
#storage_element=srm-cms.cern.ch
### this directory is the mountpoin of SE
#storage_path=/srm/managerv2?SFN=/castor/cern.ch/
### directory or tree of directory under the mounpoint
#user_remote_dir = name_directory_you_want


### To publish produced output in a local istance of DBS set publish_data = 1
publish_data=1
### Specify the dataset name. The full path will be <primarydataset>/<publish_data_name>/USER
publish_data_name =S10_START53

dbs_url_for_publication = https://cmsdbsprod.cern.ch:8443/cms_dbs_ph_analysis_02_writer/servlet/DBSServlet

### Specify the URL of DBS istance where CRAB has to publish the output files
#dbs_url_for_publication = https://cmsdbsprod.cern.ch:8443/cms_dbs_caf_analysis_01_writer/servlet/DBSServlet

### To specify additional files to be put in InputSandBox
### write the full path  if the files are not in the current directory
### (wildcard * are allowed): comma separated list
#additional_input_files = file1, file2, /full/path/file3

#if server
#thresholdLevel = 100
#eMail = your@Email.address

[GRID]
#
## RB/WMS management:
#rb = CERN

##  Black and White Lists management:
## By Storage

#se_black_list =	
#se_black_list =	T2_US_Purdue
#se_white_list = T2_KR_KNU

## By ComputingElement
ce_black_list =red.unl.edu, red-gw1.unl.edu, red-gw2.unl.edu, cit-gatekeeper.ultralight.org,cit-gatekeeper.ultralight2.org,
#ce_white_list = wisc.edu, lnl.infn.it

[CONDORG]

# Set this to condor to override the batchsystem defined in gridcat.
#batchsystem = condor

# Specify addition condor_g requirments
# use this requirment to run on a cms dedicated hardare
# globus_rsl = (condor_submit=(requirements 'ClusterName == \"CMS\" && (Arch == \"INTEL\" || Arch == \"X86_64\")'))
# use this requirement to run on the new hardware
#globus_rsl = (condor_submit=(requirements 'regexp(\"cms-*\",Machine)'))

